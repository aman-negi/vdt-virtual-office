[{"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\index.js":"1","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\App.js":"2","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\reportWebVitals.js":"3","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\main\\HomePage.js":"4","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\PrivateRoute.js":"5","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Auth.js":"6","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Dashboard.js":"7","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Login.js":"8","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\HeaderBar.js":"9","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\initfirebase.js":"10","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\SignUp.js":"11","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\PackageSelector.js":"12","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddDepart.js":"13","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\LeftSidebar.js":"14","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Departments.js":"15","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddEmployee.js":"16","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddNotice.js":"17","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddProject.js":"18","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\TodoList.js":"19","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Project.js":"20","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\ProjectManage\\ProjectWork.js":"21","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Chat.js":"22","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\blog\\RankingSystem.js":"23","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\AuthorityArea.js":"24","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\RankChanging.js":"25","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddEmployeeToDept.js":"26","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\ProjectManage\\SubParts.js":"27"},{"size":548,"mtime":1641648349724,"results":"28","hashOfConfig":"29"},{"size":3034,"mtime":1641648344472,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":8437,"mtime":1609519332782,"results":"32","hashOfConfig":"29"},{"size":505,"mtime":1641809475389,"results":"33","hashOfConfig":"29"},{"size":653,"mtime":1621529710402,"results":"34","hashOfConfig":"29"},{"size":12227,"mtime":1641649016828,"results":"35","hashOfConfig":"29"},{"size":1939,"mtime":1611850327739,"results":"36","hashOfConfig":"29"},{"size":1517,"mtime":1618762004203,"results":"37","hashOfConfig":"29"},{"size":1180,"mtime":1623256613401,"results":"38","hashOfConfig":"29"},{"size":14990,"mtime":1622358442812,"results":"39","hashOfConfig":"29"},{"size":0,"mtime":1609512435151,"results":"40","hashOfConfig":"41"},{"size":10126,"mtime":1622488939801,"results":"42","hashOfConfig":"29"},{"size":1717,"mtime":1622654091869,"results":"43","hashOfConfig":"29"},{"size":6988,"mtime":1641648964923,"results":"44","hashOfConfig":"29"},{"size":9326,"mtime":1622488928852,"results":"45","hashOfConfig":"29"},{"size":9902,"mtime":1622488907968,"results":"46","hashOfConfig":"29"},{"size":12959,"mtime":1623941000636,"results":"47","hashOfConfig":"29"},{"size":10214,"mtime":1623431203451,"results":"48","hashOfConfig":"29"},{"size":5889,"mtime":1622385501026,"results":"49","hashOfConfig":"29"},{"size":12915,"mtime":1624036946572,"results":"50","hashOfConfig":"29"},{"size":10645,"mtime":1623839439809,"results":"51","hashOfConfig":"29"},{"size":7288,"mtime":1621105031045,"results":"52","hashOfConfig":"29"},{"size":40972,"mtime":1621618920721,"results":"53","hashOfConfig":"29"},{"size":5170,"mtime":1622488877545,"results":"54","hashOfConfig":"29"},{"size":6637,"mtime":1622654406650,"results":"55","hashOfConfig":"29"},{"size":11229,"mtime":1625500541742,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"ehcugm",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"dzs3zs",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\index.js",[],["124","125"],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\App.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\reportWebVitals.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\main\\HomePage.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\PrivateRoute.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Auth.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Dashboard.js",["126","127","128"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport \"../../css/dashboard.css\";\r\nimport { auth, firestore } from \"../../initfirebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactShadowScroll from \"react-shadow-scroll\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      CompanyId: \"\",\r\n      userName: \"\",\r\n      ProfileState: {},\r\n      loading: true,\r\n    };\r\n\r\n    this.Logout = this.Logout.bind(this);\r\n    this.RenderRedirect = this.RenderRedirect.bind(this);\r\n  }\r\n\r\n  Logout = () => {\r\n    auth\r\n      .signOut()\r\n      .then(function () {\r\n        this.props.history.replace({\r\n          pathname: \"../\",\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        // An error happened.\r\n      });\r\n\r\n  };\r\n\r\n  RenderRedirect = () => {\r\n    this.props.history.push({\r\n      pathname: `./dashboard/authority-area`,\r\n      state: { ProfileState: this.state.ProfileState },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    var user = auth.currentUser;\r\n\r\n    this.setState({\r\n      userName: user.email,\r\n    });\r\n\r\n    if (this.state.loading) {\r\n      firestore\r\n        .collection(\"Employees\")\r\n        .doc(user.email)\r\n        .collection(\"info\")\r\n        .doc(\"info\")\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            var userCompanyId = doc.data().CompanyId;\r\n            currentComponent.setState({\r\n              ProfileState: doc.data(),\r\n              CompanyId: userCompanyId,\r\n              loading: false,\r\n            });\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        <div id=\"body-content\">\r\n          <div className=\"area1\">\r\n            {this.state.loading === true ? (\r\n              <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n            ) : (\r\n              <div >\r\n                <div className=\"authorityarea\">\r\n                  <div className=\"departments-heading\">Authority Area</div>\r\n                  <div className=\"departments-content\">\r\n                    Do all the company work that you are authorized for from\r\n                    adding new employee to adding a branch to the company. You\r\n                    can do all authorized work based on your rank.\r\n                  </div>\r\n                  <button onClick={this.RenderRedirect} className=\"btn\">\r\n                    Enter{\"->\"}\r\n                  </button>\r\n                </div>\r\n\r\n                <DepartmentChilds CompanyId={this.state.CompanyId} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"area2\">\r\n            {this.state.loading === true ? (\r\n              <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n            ) : (\r\n              <div >\r\n                <Profile\r\n                  ProfileState={this.state.ProfileState}\r\n                  Logout={this.Logout}\r\n                />\r\n                <Notice CompanyId={this.state.CompanyId} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//////////////////////            ///////////////////////                     ////////////////////////////////        //////////////////////\r\n\r\nfunction DepartmentChilds(props) {\r\n  const [departments, setdepartments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    if (loading) {\r\n      firestore\r\n        .collection(\"companies\")\r\n        .doc(props.CompanyId)\r\n        .collection(\"Departments\")\r\n        .where(\"EmployeeEmails\", \"array-contains\", user.email)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const departments = [];\r\n          querySnapshot.forEach((documentSnapshot) => {\r\n            departments.push({ ...documentSnapshot.data() });\r\n          });\r\n          setdepartments(departments);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [departments, loading, props.CompanyId]);\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <Display values={departments} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/////////////////////         //////////////////////////////////////////////        /////////////////////////////////\r\n\r\nfunction Display(props) {\r\n  var i = 1;\r\n  const listItems = props.values.map((d, i) => (\r\n    // <li key={idx}>{d.DepartmentName}</li>\r\n    <ListItem key={i} value={d} noForCss={i++} />\r\n  ));\r\n  return <div>{listItems}</div>;\r\n}\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nfunction ListItem(props) {\r\n  let history = useHistory();\r\n  function RenderRedirect() {\r\n    history.push({\r\n      pathname: `./dashboard/department/${state.DepartmentName}`,\r\n      state: { DepartmentState: state },\r\n    });\r\n  }\r\n\r\n  const [state, setState] = useState({});\r\n  const [loading, setloading] = useState(\"true\");\r\n  const [forcss, setforcss] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setState(props.value);\r\n    var checker = props.noForCss + 1;\r\n    if (checker % 2 === 1) {\r\n      setforcss(\"departments-child1\");\r\n    }\r\n    else {\r\n      setforcss(\"departments-child2\");\r\n    }\r\n    console.log(checker);\r\n    setloading(\"false\");\r\n  }, [props.value, props.noForCss]);\r\n\r\n  return (\r\n    <div>\r\n      {loading === \"true\" ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div className={forcss}>\r\n          <div className=\"departments-heading\">{state.DepartmentName}</div>\r\n          <div className=\"departments-content\">\r\n            {state.DepartmentDescription}\r\n          </div>\r\n          <button onClick={RenderRedirect} className=\"btn\">\r\n            Enter{\"->\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//////////////////// ////////////////////////////////      Profile        /////////////////////////////////////////////////////////////////////////\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: props.ProfileState.email,\r\n      Name: props.ProfileState.Name,\r\n      DepartmentName: props.ProfileState.DepartmentName,\r\n      DepartmentId: props.ProfileState.DepartmentId,\r\n      Post: props.ProfileState.Post,\r\n      Contact: props.ProfileState.Contact,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <div className=\"Profile-Heading\">\r\n          <div className=\"_profile\">\r\n            <div className=\"_head\"></div>\r\n            <div className=\"_body\"></div>\r\n          </div>&nbsp;\r\n          <div className=\"Profile-Heading-write\">\r\n          User Profile\r\n          </div>\r\n        </div>\r\n        <div className=\"Profile-Content\">\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Name : &nbsp; </div>\r\n            <div>{this.state.Name}</div>\r\n          </div>\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Email : &nbsp; </div>\r\n            <div>{this.state.email}</div>\r\n          </div>\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Department Name : &nbsp; </div>\r\n            <div>{this.state.DepartmentName}</div>\r\n          </div>\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Department Id : &nbsp; </div>\r\n            <div>{this.state.DepartmentId}</div>\r\n          </div>\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Post : &nbsp; </div>\r\n            <div>{this.state.Post}</div>\r\n          </div>\r\n          <div className=\"Profile-Content-Child\">\r\n            <div>Contact : &nbsp; </div>\r\n            <div>{this.state.Contact}</div>\r\n          </div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.props.Logout();\r\n              }}\r\n              style={{\r\n                backgroundColor: \"#4ea6fd\",\r\n                paddingLeft: 12,\r\n                paddingRight: 12,\r\n                paddingTop: 6,\r\n                paddingBottom: 6,\r\n                borderRadius: 8,\r\n                fontSize: 19,\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////// Notice //////////////////////////////////////////////////////////////////////////\r\nfunction Notice(props) {\r\n  const [Notices, setNotices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var today = new Date();\r\n    //   month = ((today.getMonth() + 1) < 10 ? \"0\" +(today.getMonth() + 1) : (today.getMonth() + 1)),\r\n    //  date = today.getFullYear() + '-' + month  + '-' + today.getDate();\r\n    var noticeToDelete = [];\r\n    if (loading) {\r\n      firestore\r\n        .collection(\"companies\")\r\n        .doc(props.CompanyId)\r\n        .collection(\"Notices\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const notices = [];\r\n          querySnapshot.forEach((documentSnapshot) => {\r\n            var g2 = new Date(documentSnapshot.data().NoticeEndDate);\r\n\r\n            if (g2 > today) {\r\n              notices.push({ ...documentSnapshot.data() });\r\n            } else {\r\n              noticeToDelete.push(documentSnapshot.data().NoticeTitle);\r\n            }\r\n          });\r\n          var i;\r\n          for (i = 0; i < noticeToDelete.length; i++) {\r\n            firestore\r\n              .collection(\"companies\")\r\n              .doc(props.CompanyId)\r\n              .collection(\"Notices\")\r\n              .doc(noticeToDelete[i])\r\n              .delete()\r\n              .then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n              })\r\n              .catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n              });\r\n          }\r\n          setNotices(notices);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <DisplayNotices values={Notices} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DisplayNotices(props) {\r\n  const listItems = props.values.map((d, idx) => (\r\n    // <li key={idx}>{d.DepartmentName}</li>\r\n    <ListNotice key={idx} value={d} />\r\n  ));\r\n  return (\r\n    <div className=\"Notices-child\">\r\n      <h2 style={{ textAlign: \"center\", padding: 3 }}>NOTICE</h2>\r\n      <div className=\"notice-box\">\r\n        <ReactShadowScroll style={{ height: 300, padding: 5 }} autoHide>\r\n          <div style={{ padding: 10 }}>{listItems}</div>\r\n        </ReactShadowScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListNotice(props) {\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState({});\r\n  const [loading, setloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setState(props.value);\r\n    setloading(false);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <div className=\"Notices-list\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n              }}\r\n            >\r\n              <div>{state.NoticeRealeasedDate}</div>\r\n              <div>{state.NoticeTitle}</div>\r\n              <div>{state.NoticeEndDate}</div>\r\n            </div>\r\n            <p>{state.NoticeDescription}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Login.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\HeaderBar.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\initfirebase.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\SignUp.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\PackageSelector.js",[],["129","130"],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddDepart.js",["131","132"],"import React, { Component } from \"react\";\r\nimport LeftSidebar from \".././LeftSidebar\";\r\nimport { auth, firestore } from \"../../../initfirebase\";\r\nimport \"../../../css/add-department.css\";\r\nimport firebase from 'firebase/app'\r\nimport ReactLoading from \"react-loading\";\r\n\r\n\r\nexport default class AddDepart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DepartmentName: \"\",\r\n      DepartmentHeadName: \"\",\r\n      DepartmentHeadEmail: \"\",\r\n      DepartmentContact: 0,\r\n      NoOfEmployees: 1,\r\n      DepartmentId: \"\",\r\n      DepartmentDescription: \"\",\r\n      CompanyId: this.props.location.state.CompanyState.CompanyId,\r\n      loading: true,\r\n      DepartmentState: this.props.location.state.CompanyState.Departments,\r\n      condition: true,\r\n      Departments: [],\r\n      submitloading: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.NavigatetoDashboard = this.NavigatetoDashboard.bind(this);\r\n  }\r\n\r\n  NavigatetoDashboard(event) {\r\n    event.preventDefault();\r\n    var arr = window.location.pathname.split(\"/\");\r\n    var newUrl = \"\",\r\n      i;\r\n    for (i = 1; i < arr.length; i++) {\r\n      newUrl = newUrl + \"../\";\r\n    }\r\n    newUrl = newUrl + \"dashboard/authority-area\";\r\n    // this.props.history.push(newUrl);\r\n\r\n    this.props.history.push({\r\n      pathname: `./${newUrl}`,\r\n      state: {\r\n        ProfileState: this.props.location.state.ProfileState,\r\n        CompanyState: this.props.location.state.CompanyState,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    target.name === \"DepartmentName\"\r\n      ? this.setState({\r\n          [name]: value.toUpperCase(),\r\n        })\r\n      : this.setState({\r\n          [name]: value,\r\n        });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const currentDate = new Date();\r\n    const timestamp = currentDate.getTime();\r\n\r\n    var y;\r\n    if (this.state.DepartmentState[0] !== null) {\r\n      for (y in this.state.DepartmentState) {\r\n        if (\r\n          this.state.DepartmentState[y].DepartmentId ===\r\n            this.state.DepartmentId ||\r\n          this.state.DepartmentState[y].DepartmentName ===\r\n            this.state.DepartmentName\r\n        ) {\r\n          this.setState({\r\n            condition: false,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.state.condition) {\r\n      var EmployeeEmails = [];\r\n      var departmentdata = this.state;\r\n      var x;\r\n      for (x in departmentdata) {\r\n        var checker = x.slice(0, 13);\r\n        if (checker === \"EmployeeEmail\" || x === \"DepartmentHeadEmail\") {\r\n          EmployeeEmails.push(departmentdata[x]);\r\n          firestore\r\n            .collection(\"Employees\")\r\n            .doc(departmentdata[x])\r\n            .collection(\"info\")\r\n            .doc(\"info\")\r\n            .update({\r\n              DepartmentId: this.state.DepartmentId,\r\n              DepartmentName: this.state.DepartmentName,\r\n            });\r\n          firestore\r\n            .collection(\"companies\")\r\n            .doc(this.state.CompanyId)\r\n            .collection(\"info\")\r\n            .doc(\"info\")\r\n            .update({\r\n              NoOfDepartment: firebase.firestore.FieldValue.increment(1),\r\n              Departments: firebase.firestore.FieldValue.arrayUnion({\r\n                DepartmentId: this.state.DepartmentId,\r\n                DepartmentName: this.state.DepartmentName,\r\n              }),\r\n            });\r\n        }\r\n      }\r\n\r\n      var NoOfEmployees = parseInt(this.state.NoOfEmployees);\r\n\r\n      firestore\r\n        .collection(\"companies\")\r\n        .doc(this.state.CompanyId)\r\n        .collection(\"Departments\")\r\n        .doc(this.state.DepartmentId)\r\n        .set({\r\n          DepartmentName: this.state.DepartmentName,\r\n          DepartmentHeadName: this.state.DepartmentHeadName,\r\n          DepartmentHeadEmail: this.state.DepartmentHeadEmail,\r\n          DepartmentContact: this.state.DepartmentContact,\r\n          NoOfEmployees: NoOfEmployees,\r\n          DepartmentId: this.state.DepartmentId,\r\n          DepartmentDescription: this.state.DepartmentDescription,\r\n          EmployeeEmails: EmployeeEmails,\r\n        })\r\n        .then(() => {\r\n          firestore\r\n            .collection(\"companies\")\r\n            .doc(this.state.CompanyId)\r\n            .collection(\"Messages\")\r\n            .doc(this.state.DepartmentId)\r\n            .set({\r\n              groupId: this.state.DepartmentId,\r\n              groupName: this.state.DepartmentName,\r\n              EmployeeEmails: EmployeeEmails,\r\n            });\r\n        })\r\n        .then(() => {\r\n          firestore\r\n            .collection(\"companies\")\r\n            .doc(this.state.CompanyId)\r\n            .collection(\"Messages\")\r\n            .doc(this.state.DepartmentId)\r\n            .collection(\"message-list\")\r\n            .add({\r\n              text: \"Hello Everyone Welcome To Department Chat Group\",\r\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid: this.state.DepartmentId,\r\n              userName: this.state.DepartmentName,\r\n            });\r\n        })\r\n        .then(() => {\r\n          this.NavigatetoDashboard(event);\r\n        });\r\n    } else {\r\n      alert(\r\n        \"A department is already registerd with this department Id or Department Name so please make diffferent name\"\r\n      );\r\n      this.setState({\r\n        DepartmentId: \"\",\r\n        DepartmentName: \"\",\r\n        submitloading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  LoopForEmails = (number) => {\r\n    let content = [];\r\n    for (let i = 2; i <= number; i++) {\r\n      var Emails = \"EmployeeEmail\" + i;\r\n      content.push(\r\n        <div className=\"form-childs\">\r\n          <label className=\"labels\">Employee {i} Email : </label>\r\n          <input\r\n            className=\"inputss\"\r\n            type=\"email\"\r\n            {...{\r\n              name: Emails,\r\n            }}\r\n            value={this.state.EmailCache}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        <div className=\"body-content\">\r\n          <div className=\"Heading\">Enter the department Info. to Add</div>\r\n          <form\r\n            className=\"form-departs\"\r\n            onSubmit={(event) => {\r\n              this.setState({\r\n                submitloading: true,\r\n              });\r\n              this.handleSubmit(event);\r\n            }}\r\n          >\r\n            <div className=\"form-child1\">\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentName\"\r\n                  value={this.state.DepartmentName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Id : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentId\"\r\n                  value={this.state.DepartmentId}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Head Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentHeadName\"\r\n                  value={this.state.DepartmentHeadName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Head E-mail : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"email\"\r\n                  name=\"DepartmentHeadEmail\"\r\n                  value={this.state.DepartmentHeadEmail}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">No. Of Employees : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"number\"\r\n                  name=\"NoOfEmployees\"\r\n                  value={this.state.NoOfEmployees}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              {this.LoopForEmails(this.state.NoOfEmployees)}\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Contact : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentContact\"\r\n                  value={this.state.DepartmentContact}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-childs\">\r\n              <label className=\"labels\">Department Description : </label>\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"30\"\r\n                className=\"inputss\"\r\n                name=\"DepartmentDescription\"\r\n                value={this.state.DepartmentDescription}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            {this.state.submitloading === false ? (\r\n              <div className=\"button\">\r\n                <button type=\"submit\" className=\"input-button-depart\">\r\n                  submit\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <ReactLoading\r\n                type=\"spin\"\r\n                color=\"#2d3436\"\r\n                height={35}\r\n                width={35}\r\n              />\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\LeftSidebar.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Departments.js",["133","134"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../css/department.css\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport ReactShadowScroll from \"react-shadow-scroll\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { firestore } from \"../../initfirebase\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nfunction Departments(props) {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      setState(props.location.state.DepartmentState);\r\n      setLoading(false);\r\n    }\r\n  },[loading, props.location.state.DepartmentState]);\r\n  return (\r\n    <div>\r\n      <LeftSidebar history={props.history} />\r\n      <div>\r\n        {loading === true ? (\r\n          <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n        ) : (\r\n          <div className=\"department-body\">\r\n            <div className=\"department-head\">{state.DepartmentName}</div>\r\n            <div className=\"department-area\">\r\n              <div className=\"department-area-child1\">\r\n                <div>yo</div>\r\n              </div>\r\n              <div className=\"department-area-child2\">\r\n                <div>\r\n                  <DepartmentDescription state={state} />\r\n                </div>\r\n                <div>\r\n                  <Notice DepartmentId={state.DepartmentId} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n////////////////////////////////////////////////Department Description////////////////////////////////\r\nfunction DepartmentDescription(props) {\r\n  const [state, setstate] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setstate(props.state);\r\n    setLoading(false);\r\n  }, [props.state]);\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div className=\"dept-box\">\r\n          <div>\r\n            <center>\r\n              <h2>Department Description</h2>\r\n            </center>\r\n          </div>\r\n          <div className=\"dept-inner-box\">\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">Depts Name : &nbsp;</div>\r\n              <div className=\"dept-desc-child2\">{state.DepartmentName}</div>\r\n            </div>\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">Depts Head Name : &nbsp;</div>\r\n              <div classname=\"dept-desc-child2\">{state.DepartmentHeadName}</div>\r\n            </div>\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">Depts Head Email : &nbsp;</div>\r\n              <div classname=\"dept-desc-child2\">\r\n                {state.DepartmentHeadEmail}\r\n              </div>\r\n            </div>\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">Depts Contact : &nbsp;</div>\r\n              <div classname=\"dept-desc-child2\">{state.DepartmentContact}</div>\r\n            </div>\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">No. Of Employee : &nbsp;</div>\r\n              <div classname=\"dept-desc-child2\">{state.NoOfEmployees}</div>\r\n            </div>\r\n            <div className=\"dept-desc-child\">\r\n              <div className=\"dept-desc-child1\">Dept Description : &nbsp;</div>\r\n              <div classname=\"dept-desc-child2\">\r\n                {state.DepartmentDescription}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////// Notice //////////////////////////////////////////////////////////////////////////\r\nfunction Notice(props) {\r\n  const [Notices, setNotices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var today = new Date();\r\n    //   month = ((today.getMonth() + 1) < 10 ? \"0\" +(today.getMonth() + 1) : (today.getMonth() + 1)),\r\n    //  date = today.getFullYear() + '-' + month  + '-' + today.getDate();\r\n    var noticeToDelete = [];\r\n    if (loading) {\r\n      firestore\r\n        .collection(\"companies\")\r\n        .doc(props.DepartmentId)\r\n        .collection(\"Notices\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const notices = [];\r\n          querySnapshot.forEach((documentSnapshot) => {\r\n            var g2 = new Date(documentSnapshot.data().NoticeEndDate);\r\n\r\n            if (g2 > today) {\r\n              notices.push({ ...documentSnapshot.data() });\r\n            } else {\r\n              noticeToDelete.push(documentSnapshot.data().NoticeTitle);\r\n            }\r\n          });\r\n          var i;\r\n          for (i = 0; i < noticeToDelete.length; i++) {\r\n            firestore\r\n              .collection(\"companies\")\r\n              .doc(props.DepartmentId)\r\n              .collection(\"Notices\")\r\n              .doc(noticeToDelete[i])\r\n              .delete()\r\n              .then(function () {\r\n                console.log(\"Document successfully deleted!\");\r\n              })\r\n              .catch(function (error) {\r\n                console.error(\"Error removing document: \", error);\r\n              });\r\n          }\r\n          setNotices(notices);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <DisplayNotices values={Notices} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DisplayNotices(props) {\r\n  const listItems = props.values.map((d, idx) => (\r\n    <ListNotice key={idx} value={d} />\r\n  ));\r\n  return (\r\n    <div className=\"Notices-child\">\r\n      <h2 style={{ textAlign: \"center\" }}>NOTICE</h2>\r\n      <div className=\"notice-box\">\r\n        <ReactShadowScroll isShadow={true} style={{ height: 300, padding: 5 }}>\r\n          <div style={{ padding: 10 }}>{listItems}</div>\r\n        </ReactShadowScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListNotice(props) {\r\n  let history = useHistory();\r\n\r\n\r\n  const [state, setState] = useState({});\r\n  const [loading, setloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setState(props.value);\r\n    setloading(false);\r\n  }, [props.value]);\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div className=\"Notices\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <div>{state.NoticeRealeasedDate}</div>\r\n            <div>{state.NoticeTitle}</div>\r\n            <div>{state.NoticeEndDate}</div>\r\n          </div>\r\n\r\n          <div>{state.NoticeDescription}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Departments;\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddEmployee.js",["135"],"import React, { Component } from \"react\";\r\nimport LeftSidebar from \".././LeftSidebar\";\r\nimport { firestore, secondaryAppAuth } from \"../../../initfirebase\";\r\nimport \"../../../css/add-department.css\";\r\nimport firebase from 'firebase/app';\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default class AddEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // DepartmentId: \"\",\r\n      Contact: \"\",\r\n      // DepartmentName : \"\",\r\n      Post: \"\",\r\n      Name: \"\",\r\n      email: \"\",\r\n      CompanyId: this.props.location.state.CompanyState.CompanyId,\r\n      Password: \"\",\r\n      ConfirmPassword: \"\",\r\n      loading: true,\r\n      rank: \"1\",\r\n      submitloading:false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.NavigatetoDashboard = this.NavigatetoDashboard.bind(this);\r\n    this.handleRankChange = this.handleRankChange.bind(this);\r\n  }\r\n\r\n  handleRankChange(e) {\r\n    this.setState({ rank: e.target.value });\r\n  }\r\n\r\n  NavigatetoDashboard(event) {\r\n    event.preventDefault();\r\n    var arr = window.location.pathname.split(\"/\");\r\n    var newUrl = \"\",\r\n      i;\r\n    for (i = 1; i < arr.length; i++) {\r\n      newUrl = newUrl + \"../\";\r\n    }\r\n    newUrl = newUrl + \"dashboard/authority-area\";\r\n    // this.props.history.push(newUrl);\r\n\r\n    this.props.history.push({\r\n      pathname: `./${newUrl}`,\r\n      state: { ProfileState: this.props.location.state.ProfileState , CompanyState: this.props.location.state.CompanyState },\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    target.name === \"DepartmentName\"\r\n      ? this.setState({\r\n          [name]: value.toUpperCase(),\r\n        })\r\n      : this.setState({\r\n          [name]: value,\r\n        });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    var arr=[];\r\n    secondaryAppAuth\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.Password)\r\n      .then(() => {\r\n        var user = secondaryAppAuth.currentUser;\r\n        user.updateProfile({\r\n          displayName: this.state.Name,\r\n        });\r\n        arr.push(\"true\");\r\n      }).then(() =>{\r\n        firestore\r\n        .collection(\"companies\")\r\n        .doc(this.state.CompanyId)\r\n        .collection(\"Messages\")\r\n        .doc(this.state.CompanyId)\r\n        .update({\r\n          EmployeeEmails: firebase.firestore.FieldValue.arrayUnion(\r\n            this.state.email\r\n          ),\r\n        });\r\n      }).then(() =>{\r\n        firestore\r\n        .collection(\"Employees\")\r\n        .doc(this.state.email)\r\n        .collection(\"info\")\r\n        .doc(\"info\")\r\n        .set({\r\n          DepartmentId: \"\",\r\n          DepartmentName : \"\",\r\n          Contact: this.state.Contact,\r\n          CompanyId: this.state.CompanyId,\r\n          Post: this.state.Post,\r\n          Name: this.state.Name,\r\n          email: this.state.email,\r\n          rank: this.state.rank,\r\n        });\r\n      })\r\n      .then( () => {\r\n        firestore\r\n        .collection(\"companies\")\r\n        .doc(this.state.CompanyId)\r\n        .collection(\"info\")\r\n        .doc(\"info\")\r\n        .update({\r\n          NoOfEmployees: firebase.firestore.FieldValue.increment(1)\r\n        });\r\n    \r\n      }).then(() =>{\r\n        firestore\r\n        .collection(\"Employees\")\r\n        .doc(this.state.email)\r\n        .collection(\"todo-list\")\r\n        .doc(\"todo\")\r\n        .set({ items: [] });\r\n      secondaryAppAuth.signOut();\r\n      this.NavigatetoDashboard(event);\r\n      }) .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode + \"  /  \" + errorMessage);\r\n        alert(errorCode + \"  /  \" + errorMessage);\r\n        this.setState({\r\n          submitloading:false\r\n        });\r\n      });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        <div className=\"body-content\">\r\n          <div className=\"Heading\">Enter the Employee Info. to Add</div>\r\n          <form className=\"form-departs\" onSubmit={\r\n            (event)=>{\r\n              this.setState({\r\n                submitloading:true\r\n              });\r\n              this.handleSubmit(event);\r\n            }\r\n            }>\r\n            <div className=\"form-child1\">\r\n              {/* <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentName\"\r\n                  value={this.state.DepartmentName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Department Id : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"DepartmentId\"\r\n                  value={this.state.DepartmentId}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div> */}\r\n              {/* <div className=\"form-childs\">\r\n                <label className=\"labels\">Company Id : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"CompanyId\"\r\n                  value={this.state.CompanyId}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div> */}\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Employee Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"Name\"\r\n                  value={this.state.Name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Employee Contact : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"Contact\"\r\n                  value={this.state.Contact}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Employee Post : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"Post\"\r\n                  value={this.state.Post}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Employee Rank : </label>\r\n\r\n                <select\r\n                  classname=\"inputss\"\r\n                  value={this.state.rank}\r\n                  style={{width:200,borderRadius:7}}\r\n                  onChange={this.handleRankChange}\r\n                >\r\n                  <option name=\"1\">1</option>\r\n                  <option name=\"1a\">1a</option>\r\n                  <option name=\"2\">2</option>\r\n                  <option name=\"2a\">2a</option>\r\n                  <option name=\"3\">3</option>\r\n                  <option name=\"3a\">3a</option>\r\n                  <option name=\"4\">4</option>\r\n                  <option name=\"4a\">4a</option>\r\n                  <option name=\"5\">5</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Employee E-mail : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Password : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"password\"\r\n                  name=\"Password\"\r\n                  value={this.state.Password}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Confirm Password : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"password\"\r\n                  name=\"ConfirmPassword\"\r\n                  value={this.state.ConfirmPassword}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"button\">\r\n              <button type=\"submit\" className=\"input-button-depart\">\r\n                submit\r\n              </button>\r\n            </div> */}\r\n                        {this.state.submitloading === false ? (\r\n              <div className=\"button\">\r\n                <button type=\"submit\" className=\"input-button-depart\">\r\n                  submit\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <ReactLoading type=\"spin\" color=\"#2d3436\" height={35} width={35} />\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddNotice.js",["136","137"],"import React, { Component } from \"react\";\r\nimport LeftSidebar from \"../LeftSidebar\";\r\nimport { auth, firestore } from \"../../../initfirebase\";\r\nimport \"../../../css/add-department.css\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default class AddNotice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var today = new Date(),\r\n      month =\r\n        today.getMonth() + 1 < 10\r\n          ? \"0\" + (today.getMonth() + 1)\r\n          : today.getMonth() + 1,\r\n      date = today.getFullYear() + \"-\" + month + \"-\" + today.getDate();\r\n\r\n    this.state = {\r\n      NoticeTitle: \"\",\r\n      NoticeEndDate: \"\",\r\n      NoticeRealeasedDate: date,\r\n      NoticeDescription: \"\",\r\n      NoticeByName: \"\",\r\n      ReferToEmail: \"\",\r\n      CompanyId: this.props.location.state.ProfileState.CompanyId,\r\n      DepartmentId: this.props.location.state.ProfileState.DepartmentId,\r\n      userRank: this.props.location.state.ProfileState.rank,\r\n      loading: true,\r\n      selectedId: this.props.location.state.CompanyState.CompanyId,\r\n      CompanyInfo: this.props.location.state.CompanyState,\r\n      submitloading:false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.NavigatetoDashboard = this.NavigatetoDashboard.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleSelect(event) {\r\n    event.preventDefault();\r\n    const selected = event.target.value;\r\n    this.setState({\r\n      selectedId: selected,\r\n    });\r\n    console.log(\"Succesfull ->\" + selected);\r\n  }\r\n\r\n  NavigatetoDashboard(event) {\r\n    event.preventDefault();\r\n\r\n    var arr = window.location.pathname.split(\"/\");\r\n    var newUrl = \"\",\r\n      i;\r\n    for (i = 1; i < arr.length; i++) {\r\n      newUrl = newUrl + \"../\";\r\n    }\r\n    newUrl = newUrl + \"dashboard/authority-area\";\r\n    // this.props.history.push(newUrl);\r\n\r\n    this.props.history.push({\r\n      pathname: `./${newUrl}`,\r\n      state: {\r\n        ProfileState: this.props.location.state.ProfileState,\r\n        CompanyState: this.props.location.state.CompanyState,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    target.name === \"DepartmentName\"\r\n      ? this.setState({\r\n          [name]: value.toUpperCase(),\r\n        })\r\n      : this.setState({\r\n          [name]: value,\r\n        });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const currentDate = new Date();\r\n    const timestamp = currentDate.getTime().toString();\r\n\r\n    firestore\r\n      .collection(\"companies\")\r\n      .doc(this.state.selectedId)\r\n      .collection(\"Notices\")\r\n      .doc(timestamp)\r\n      .set({\r\n        NoticeTitle: this.state.NoticeTitle,\r\n        NoticeRealeasedDate: this.state.NoticeRealeasedDate,\r\n        NoticeEndDate: this.state.NoticeEndDate,\r\n        NoticeDescription: this.state.NoticeDescription,\r\n        NoticeByName: this.state.NoticeByName,\r\n        ReferToEmail: this.state.ReferToEmail,\r\n      }).catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode + \"  /  \" + errorMessage);\r\n        alert(errorCode + \"  /  \" + errorMessage);\r\n        this.setState({\r\n          submitloading:false\r\n        });\r\n      });;\r\n    this.NavigatetoDashboard(event);\r\n  }\r\n\r\n  render() {\r\n    const listItems = this.props.location.state.CompanyState.Departments.map(\r\n      (d, idx) => (\r\n        <option key={idx} value={d.DepartmentId}>\r\n          {d.DepartmentName + \"->\" + d.DepartmentId}\r\n        </option>\r\n      )\r\n    );\r\n    console.log(this.props.location.state.CompanyState);\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        {this.state.loading == false ? (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            loading...\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"body-content\">\r\n              <div className=\"Heading\">Enter The Public Notice : </div>\r\n              <form\r\n                className=\"form-departs\"\r\n                onSubmit={(event) => {\r\n                  this.setState({\r\n                    submitloading: true,\r\n                  });\r\n                  this.handleSubmit(event);\r\n                }}\r\n              >\r\n                <div className=\"form-child1\">\r\n                  <div className=\"form-childs\">\r\n                    <label className=\"labels\">Notice Title : </label>\r\n                    <input\r\n                      className=\"inputss\"\r\n                      type=\"text\"\r\n                      name=\"NoticeTitle\"\r\n                      value={this.state.NoticeTitle}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-childs\">\r\n                    <label className=\"labels\">Notice End Date : </label>\r\n                    <input\r\n                      className=\"inputss\"\r\n                      type=\"date\"\r\n                      name=\"NoticeEndDate\"\r\n                      value={this.state.NoticeEndDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-childs\">\r\n                    <label className=\"labels\">Notice by Name : </label>\r\n                    <input\r\n                      className=\"inputss\"\r\n                      type=\"text\"\r\n                      name=\"NoticeByName\"\r\n                      value={this.state.NoticeByName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  {(() => {\r\n                    switch (this.state.userRank) {\r\n                      case \"1\":\r\n                        return (\r\n                          <div className=\"form-childs\">\r\n                            <label className=\"labels\">Notice To :</label>\r\n                            <select\r\n                              className=\"inputss\"\r\n                              name={this.state.selectedId}\r\n                              onChange={this.handleSelect}\r\n                            >\r\n                              <option value={this.state.CompanyId}>\r\n                                Comapny\r\n                              </option>\r\n                              {listItems}\r\n                            </select>\r\n                          </div>\r\n                        );\r\n                      case \"1a\":\r\n                        return (\r\n                          <div className=\"form-childs\">\r\n                            <label className=\"labels\">Notice To :</label>\r\n                            <select\r\n                              className=\"inputss\"\r\n                              name={this.state.selectedId}\r\n                              onChange={this.handleSelect}\r\n                            >\r\n                              <option value={this.state.CompanyId}>\r\n                                Comapny\r\n                              </option>\r\n                              {listItems}\r\n                            </select>\r\n                          </div>\r\n                        );\r\n                      default:\r\n                        return (\r\n                          <div className=\"form-childs\">\r\n                            <label className=\"labels\">Notice To :</label>\r\n                            <select\r\n                              className=\"inputss\"\r\n                              name={this.state.selectedId}\r\n                              onChange={this.handleSelect}\r\n                            >\r\n                              <option value={this.state.CompanyId}>\r\n                                Comapny\r\n                              </option>\r\n                              <option value={this.state.DepartmentId}>\r\n                                Department\r\n                              </option>\r\n                            </select>\r\n                          </div>\r\n                        );\r\n                    }\r\n                  })()}\r\n\r\n                  <div className=\"form-childs\">\r\n                    <label className=\"labels\">Refer To E-mail : </label>\r\n                    <input\r\n                      className=\"inputss\"\r\n                      type=\"email\"\r\n                      name=\"ReferToEmail\"\r\n                      value={this.state.ReferToEmail}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-childs\">\r\n                  <label className=\"labels\">Notice Description : </label>\r\n                  <textarea\r\n                    rows=\"4\"\r\n                    cols=\"30\"\r\n                    className=\"inputss\"\r\n                    name=\"NoticeDescription\"\r\n                    value={this.state.NoticeDescription}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* <div className=\"button\">\r\n                  <button type=\"submit\" className=\"input-button-depart\">\r\n                    submit\r\n                  </button>\r\n                </div> */}\r\n                {this.state.submitloading === false ? (\r\n                  <div className=\"button\">\r\n                    <button type=\"submit\" className=\"input-button-depart\">\r\n                      submit\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <ReactLoading\r\n                    type=\"spin\"\r\n                    color=\"#2d3436\"\r\n                    height={35}\r\n                    width={35}\r\n                  />\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddProject.js",["138"],"import React, { Component } from \"react\";\r\nimport LeftSidebar from \".././LeftSidebar\";\r\nimport { auth, firestore } from \"../../../initfirebase\";\r\nimport \"../../../css/add-department.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport firebase from 'firebase/app'\r\n\r\nexport default class AddProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ProjectName: \"\",\r\n      ProjectHeadName: \"\",\r\n      ProjectContact: \"\",\r\n      NoOfEmployeesInProject: 1,\r\n      ProjectId: \"\",\r\n      ProjectDetailDescription: \"\",\r\n      ProjectBriefDescription: \"\",\r\n      CompanyId: this.props.location.state.ProfileState.CompanyId,\r\n      ProfileState: this.props.location.state.ProfileState,\r\n      CompanyState: this.props.location.state.CompanyState,\r\n      NoOfParts: 0,\r\n      CurrentStatus: 0,\r\n      ToBeCompletedTill: \"\",\r\n      loading: true,\r\n      submitloading:false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.NavigatetoDashboard = this.NavigatetoDashboard.bind(this);\r\n  }\r\n\r\n  NavigatetoDashboard(event) {\r\n    event.preventDefault();\r\n    var arr = window.location.pathname.split(\"/\");\r\n    var newUrl = \"\",\r\n      i;\r\n    for (i = 1; i < arr.length; i++) {\r\n      newUrl = newUrl + \"../\";\r\n    }\r\n    newUrl = newUrl + \"dashboard/authority-area\";\r\n    // this.props.history.push(newUrl);\r\n\r\n    this.props.history.push({\r\n      pathname: `./${newUrl}`,\r\n      state: {\r\n        ProfileState: this.props.location.state.ProfileState,\r\n        CompanyState: this.props.location.state.CompanyState,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    if (target.name === \"ProjectName\") {\r\n      this.setState({\r\n        ...this.state,\r\n        [name]: value.toUpperCase(),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  }\r\n\r\n  PercentageConverter = (ValueOfPart) =>{\r\n    var totalValue = [0];\r\n    for(var i = 0; i < ValueOfPart.length; i++){\r\n          totalValue[0] = parseInt(totalValue[0]) + parseInt(ValueOfPart[i]); \r\n    }\r\n\r\n    var PartsPercentage = [];\r\n    for(var i = 0; i < ValueOfPart.length; i++){\r\n      var newValue;\r\n      newValue = (parseInt(ValueOfPart[i])/ parseInt(totalValue[0]))*100;\r\n      PartsPercentage.push(newValue);\r\n    }     \r\n    return PartsPercentage;\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    var projectdata = this.state;\r\n\r\n    var EmployeeEmails = [];\r\n    var NameOfParts = [];\r\n    var ValueOfParts = [];\r\n    var x;\r\n\r\n    /////////////////////////////      For loop over array for employee emails, Name of Part, Value of parts\r\n\r\n    for (x in projectdata) {\r\n      var checker = x.slice(0, 13);\r\n      var checker2 = x.slice(0, 10);\r\n      var checker3 = x.slice(0, 4);\r\n      if (checker === \"EmployeeEmail\" || x === \"ProjectHeadEmail\") {\r\n        EmployeeEmails.push(projectdata[x]);\r\n      } else if (checker2 === \"NameOfPart\") {\r\n        NameOfParts.push(projectdata[x]);\r\n      } else if (checker3 === \"Part\") {\r\n        ValueOfParts.push(projectdata[x]);\r\n      }\r\n    }\r\n\r\n    var PartsPercentage = this.PercentageConverter(ValueOfParts);\r\n\r\n    var CombineNameValueOfParts = {};\r\n    var CombineNameProgressOfParts = {};\r\n    for (var i = 0; i < NameOfParts.length; i++) {\r\n      // CombineNameValueOfParts.push({ [NameOfParts[i]]: PartsPercentage[i]});\r\n      CombineNameValueOfParts[[NameOfParts[i]]]=PartsPercentage[i];\r\n      CombineNameProgressOfParts[[NameOfParts[i]]]=0;\r\n      // CombineNameProgressOfParts.push({ [NameOfParts[i]]: 0});\r\n    }\r\n\r\n    firestore\r\n      .collection(\"companies\")\r\n      .doc(this.state.CompanyId)\r\n      .collection(\"Projects\")\r\n      .doc(this.state.ProjectId)\r\n      .set({\r\n        ...projectdata,\r\n        EmployeeEmails: EmployeeEmails,\r\n        CombineNameValueOfParts: CombineNameValueOfParts,\r\n        CombineNameProgressOfParts:CombineNameProgressOfParts\r\n      })\r\n      .then(() => {\r\n        firestore\r\n          .collection(\"companies\")\r\n          .doc(this.state.CompanyId)\r\n          .collection(\"Messages\")\r\n          .doc(this.state.ProjectId)\r\n          .set({\r\n            groupId: this.state.ProjectId,\r\n            groupName: this.state.ProjectName,\r\n            EmployeeEmails: EmployeeEmails,\r\n          })\r\n          .then(() => {\r\n            firestore\r\n            .collection(\"companies\")\r\n            .doc(this.state.CompanyId)\r\n            .collection(\"Messages\")\r\n            .doc(this.state.ProjectId)\r\n            .collection(\"message-list\")\r\n            .add({\r\n              text:\"Hello Everyone Welcome To the Project Chat Group\",\r\n              createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid:this.state.ProjectId,\r\n              userName:this.state.ProjectName,\r\n            });\r\n\r\n          });\r\n      }).catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode + \"  /  \" + errorMessage);\r\n        alert(errorCode + \"  /  \" + errorMessage);\r\n        this.setState({\r\n          submitloading:false\r\n        });\r\n      });\r\n    this.NavigatetoDashboard(event);\r\n  }\r\n\r\n  LoopForEmails = (number) => {\r\n    let content = [];\r\n    for (let i = 2; i <= number; i++) {\r\n      var Emails = \"EmployeeEmail\" + i;\r\n      content.push(\r\n        <div className=\"form-childs\">\r\n          <label className=\"labels\">Employee {i} Email : </label>\r\n          <input\r\n            className=\"inputss\"\r\n            type=\"email\"\r\n            {...{\r\n              name: Emails,\r\n            }}\r\n            value={this.state.EmailCache}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  LoopForParts = (number) => {\r\n    let content = [];\r\n    for (let i = 1; i <= number; i++) {\r\n      var Parts = \"NameOfPart\" + i;\r\n      var PartPercentage = \"Part\" + i + \"Percentage\";\r\n      content.push(\r\n        <div className =\"form-child1\"> \r\n        <div className=\"form-childs\">\r\n          <label className=\"labels\">Name of part {i} : </label>\r\n          <input\r\n            className=\"inputss\"\r\n            type=\"text\"\r\n            {...{\r\n              name: Parts,\r\n            }}\r\n            value={this.state.PartsInfoCache}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-childs\">\r\n          <label className=\"labels\">Part {i} Percentage : </label>\r\n          <input\r\n            className=\"inputss\"\r\n            type=\"number\"\r\n            {...{\r\n              name: PartPercentage,\r\n            }}\r\n            value={this.state.PercentageByPartsCache}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        </div>\r\n\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    var user = auth.currentUser;\r\n    console.log(user.email);\r\n    firestore\r\n      .collection(\"Employees\")\r\n      .doc(user.email)\r\n      .collection(\"info\")\r\n      .doc(\"info\")\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          console.log(\"Document data:\", doc.data());\r\n\r\n          var userCompanyId = doc.data().CompanyId;\r\n          console.log(userCompanyId);\r\n          currentComponent.setState({\r\n            CompanyId: userCompanyId,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        <div className=\"body-content\">\r\n          <div className=\"Heading\">Enter the Project Info. to Add</div>\r\n          <form\r\n            className=\"form-departs\"\r\n            onSubmit={(event) => {\r\n              this.setState({\r\n                submitloading: true,\r\n              });\r\n              this.handleSubmit(event);\r\n            }}\r\n          >\r\n            <div className=\"form-child1\">\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Project Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"ProjectName\"\r\n                  value={this.state.ProjectName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Project Id : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"ProjectId\"\r\n                  value={this.state.ProjectId}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">End Date : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"date\"\r\n                  name=\"ToBeCompletedTill\"\r\n                  value={this.state.ToBeCompletedTill}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">No. Of Employees in Project : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"number\"\r\n                  name=\"NoOfEmployeesInProject\"\r\n                  value={this.state.NoOfEmployeesInProject}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Project Head Name : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"text\"\r\n                  name=\"ProjectHeadName\"\r\n                  value={this.state.ProjectHeadName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Project Head E-mail : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"email\"\r\n                  name=\"ProjectHeadEmail\"\r\n                  value={this.state.ProjectHeadEmail}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              {this.LoopForEmails(this.state.NoOfEmployeesInProject)}\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">No. Of Major Project part's : </label>\r\n                <input\r\n                  className=\"inputss\"\r\n                  type=\"number\"\r\n                  name=\"NoOfParts\"\r\n                  value={this.state.NoOfParts}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.LoopForParts(this.state.NoOfParts)}\r\n\r\n            <div className=\"form-child1\">\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">Project Brief Description : </label>\r\n                <textarea\r\n                  className=\"inputss\"\r\n                  name=\"ProjectBriefDescription\"\r\n                  rows=\"4\"\r\n                  cols=\"57\"\r\n                  value={this.state.ProjectBriefDescription}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-childs\">\r\n                <label className=\"labels\">\r\n                  Project Detailed Description :{\" \"}\r\n                </label>\r\n                <textarea\r\n                  className=\"inputss\"\r\n                  rows=\"4\"\r\n                  cols=\"57\"\r\n                  name=\"ProjectDetailDescription\"\r\n                  value={this.state.ProjectDetailDescription}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"button\" style={{ marginTop: 25 }}>\r\n              <button type=\"submit\" className=\"input-button-depart\">\r\n                submit\r\n              </button>\r\n            </div> */}\r\n            {this.state.submitloading === false ? (\r\n              <div className=\"button\" style={{ marginTop: 25 }}>\r\n                <button type=\"submit\" className=\"input-button-depart\">\r\n                  submit\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <ReactLoading\r\n                type=\"spin\"\r\n                color=\"#2d3436\"\r\n                height={35}\r\n                width={35}\r\n              />\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\TodoList.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Project.js",["139","140"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport \"../../css/Project.css\";\r\nimport { auth, firestore } from \"../../initfirebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default class Project extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      CompanyId: \"\",\r\n      userName: \"\",\r\n      ProfileState: \"\",\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    var user = auth.currentUser;\r\n\r\n    this.setState({\r\n      userName: user.email,\r\n    });\r\n    if(this.state.loading){\r\n    firestore\r\n      .collection(\"Employees\")\r\n      .doc(user.email)\r\n      .collection(\"info\")\r\n      .doc(\"info\")\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          var userCompanyId = doc.data().CompanyId;\r\n          currentComponent.setState({\r\n            ProfileState: doc.data(),\r\n            CompanyId: userCompanyId,\r\n            loading: false,\r\n          });\r\n          console.log(userCompanyId);\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftSidebar history={this.props.history} />\r\n        <div className=\"body-content-project\">\r\n          <div className=\"projects\">\r\n            {this.state.loading === true ? (\r\n              <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n            ) : (\r\n              <ProjectChilds email = {this.state.userName} CompanyId={this.state.CompanyId} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//////////////////////            ///////////////////////                     ////////////////////////////////        //////////////////////\r\n\r\nfunction ProjectChilds(props) {\r\n  const [projects, setprojects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    if(loading){\r\n    firestore\r\n      .collection(\"companies\")\r\n      .doc(props.CompanyId)\r\n      .collection(\"Projects\")\r\n      .where(\"EmployeeEmails\",\"array-contains\",user.email)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const projects = [];\r\n        querySnapshot.forEach((documentSnapshot) => {\r\n          projects.push({ ...documentSnapshot.data() });\r\n        });\r\n        setprojects(projects);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <Display values={projects} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//////////////////////         //////////////////////////////////////////////        /////////////////////////////////\r\n\r\nfunction Display(props) {\r\n  var i = 1;\r\n\r\n  const listItems = props.values.map((d, i) => (\r\n    // <li key={idx}>{d.DepartmentName}</li>\r\n    <div>\r\n      <ListItem key={++i} index={++i} value={d} />\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"projectlists\">\r\n      <div className=\"projects-child-title\">\r\n        <div className=\"projects-sno\">S. No.</div>\r\n        <div className=\"projects-heading\">Project Name </div>\r\n        <div className=\"projects-endDate\">Project End Date</div>\r\n      </div>\r\n      {listItems}\r\n    </div>\r\n  );\r\n}\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\nfunction ListItem(props) {\r\n  let history = useHistory();\r\n  function RenderRedirect() {\r\n    history.push({\r\n      pathname: `./project/${state.ProjectId}`\r\n    });\r\n  }\r\n\r\n  const [state, setState] = useState({});\r\n  const [loading, setloading] = useState(\"true\");\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  var showHideClassName = show ? \"showing\" : \"notShowing\";\r\n\r\n  useEffect(() => {\r\n    setState(props.value);\r\n    setloading(\"false\");\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {loading === \"true\" ? (\r\n        <ReactLoading type=\"cylon\" color=\"#2d3436\" />\r\n      ) : (\r\n        <div>\r\n          <div className=\"project-child-list\">          \r\n          <div className=\"projects-child\" onClick={() => {setShow(!show)}}>\r\n            <div className=\"projects-sno\">{props.index}</div>\r\n            <div className=\"projects-heading\">{state.ProjectName}</div>\r\n            <div className=\"projects-endDate\">{state.ToBeCompletedTill}</div>\r\n          </div>\r\n          </div>  \r\n\r\n          <div className = {showHideClassName} style={{color:\"white\", fontSize:18}}>\r\n            <div style ={{padding : 5,display:\"flex\" , flexDirection:\"row\" , flex: 10}}>\r\n             <div style={{flex:1.8}}> Description : </div><div style={{flex:8.2}}>{state.ProjectBriefDescription}</div>\r\n            </div> \r\n            <div style ={{ padding : 5,display:\"flex\" , flexDirection:\"row\" , flex: 10}}>\r\n              <div style={{flex:1.8}}>No. Of Employees in it : </div><div style={{flex:8.2}}>{state.NoOfEmployeesInProject}</div>\r\n            </div>\r\n            <div style ={{ padding : 5,display:\"flex\" , flexDirection:\"row\" , flex: 10}}>\r\n              <div style={{flex:1.8}}>CurrentStatus : </div><ProgressBar style={{backgroundColor:\"white\", flex:8.2}} now={state.CurrentStatus+1} label={`${state.CurrentStatus}%`} />\r\n            </div>\r\n            <div style = {{textAlign:\"center\"}}>\r\n               <button onClick={() =>{RenderRedirect()}} style={{backgroundColor:\"white\" , borderRadius:8}}>Work On</button> \r\n            </div>  \r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\ProjectManage\\ProjectWork.js",["141","142","143","144","145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth, firestore } from \"../../../initfirebase\";\r\nimport firebase from \"firebase/app\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LeftSidebar from \"../LeftSidebar\";\r\nimport \"../../../css/project-work.css\";\r\nimport SubParts from \"./SubParts\";\r\nimport { Pie, Line } from \"react-chartjs-2\";\r\n\r\nexport default function ProjectWork(props) {\r\n  const [display, Setdisplay] = useState(null);\r\n  const [loading, Setloading] = useState(true);\r\n  const [CompanyId, SetCompanyId] = useState(\"\");\r\n  const [state, setState] = useState({});\r\n\r\n  let { projectid } = useParams();\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    firestore\r\n      .collection(\"Employees\")\r\n      .doc(user.email)\r\n      .collection(\"info\")\r\n      .doc(\"info\")\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          var userCompanyId = doc.data().CompanyId;\r\n          SetCompanyId(userCompanyId);\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      });\r\n    if (CompanyId !== \"\") {\r\n      firestore\r\n        .collection(\"companies\")\r\n        .doc(CompanyId)\r\n        .collection(\"Projects\")\r\n        .doc(projectid)\r\n        .onSnapshot(function (doc) {\r\n          var newstate = {};\r\n          newstate = doc.data();\r\n          setState(newstate);\r\n          const EmployeeList = newstate.EmployeeEmails.map((d, idx) => {\r\n            if (d !== newstate.ProjectHeadEmail) {\r\n              return (\r\n                <div className=\"project-employee-email\" key={idx}>\r\n                  {d}\r\n                </div>\r\n              );\r\n            } else {\r\n              return;\r\n            }\r\n          });\r\n          Setdisplay(EmployeeList);\r\n          Setloading(false);\r\n        });\r\n    }\r\n  }, [props, CompanyId]);\r\n\r\n  function dateleft(endDate) {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + \"-\" + mm + \"-\" + dd;\r\n    var date1 = new Date(endDate);\r\n    var date2 = new Date(today);\r\n    var time_difference = difference(date2, date1);\r\n    return time_difference;\r\n  }\r\n\r\n  function difference(date1, date2) {\r\n    const date1utc = Date.UTC(\r\n      date1.getFullYear(),\r\n      date1.getMonth(),\r\n      date1.getDate()\r\n    );\r\n    const date2utc = Date.UTC(\r\n      date2.getFullYear(),\r\n      date2.getMonth(),\r\n      date2.getDate()\r\n    );\r\n    var day = 1000 * 60 * 60 * 24;\r\n    return (date2utc - date1utc) / day;\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"body-content\">\r\n      <LeftSidebar history={history} />\r\n      <div className=\"main-content-area\">\r\n        {loading === true ? (\r\n          <div>Loading....</div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"project-heading-title\">\r\n              <center>\r\n                <h1>{state.ProjectName}</h1>\r\n              </center>\r\n            </div>\r\n            <div className=\"project-description\">\r\n              <center>{state.ProjectDetailDescription}</center>\r\n            </div>\r\n            <div className=\"project-date\">\r\n              <div className=\"project-end-date\">\r\n                Finish Till : {state.ToBeCompletedTill}\r\n              </div>\r\n              <div className=\"project-date-left\">\r\n                Dates Left : {dateleft(state.ToBeCompletedTill)}\r\n              </div>\r\n            </div>\r\n            <div className=\"project-email-list\">\r\n              <div className=\"project-email-head\">\r\n                Head : {state.ProjectHeadEmail}\r\n              </div>\r\n              {display}\r\n            </div>\r\n\r\n            <div className=\"Project-content-child2\">\r\n              <ProjectPartList\r\n                state={state}\r\n                CompanyId={CompanyId}\r\n                projectid={projectid}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//////////////////////// List all the parts of the project///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction ProjectPartList(props) {\r\n  // const [pieLabel, setPieLabel] = useState([]);\r\n  const [pieData, setPieData] = useState([]);\r\n  const [label, setLabel] = useState([]);\r\n  const [lineData, setLineData] = useState([]);\r\n  const [graph1Loading, setGraph1Loading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    var x;\r\n\r\n    var arrLabel = [];\r\n    var arrValues = [];\r\n    var arrProgressValues = [];\r\n      for (x in sortObj(props.state.CombineNameProgressOfParts)) {\r\n        console.log();\r\n        arrLabel.push(x);\r\n        arrProgressValues.push(props.state.CombineNameProgressOfParts[x]);\r\n        arrValues.push(props.state.CombineNameValueOfParts[x]);\r\n      }\r\n    \r\n    setLineData(arrProgressValues);\r\n    setLabel(arrLabel);\r\n    setPieData(arrValues);\r\n    setGraph1Loading(false);\r\n  }, [props]);\r\n\r\n\r\n\r\n\r\n\r\n  function LightenDarkenColor(col, amt) {\r\n    var usePound = false;\r\n\r\n    if (col[0] == \"#\") {\r\n      col = col.slice(1);\r\n      usePound = true;\r\n    }\r\n\r\n    var num = parseInt(col, 16);\r\n    var r = (num >> 16) + amt;\r\n    if (r > 255) r = 255;\r\n    else if (r < 0) r = 0;\r\n    var b = ((num >> 8) & 0x00ff) + amt;\r\n    if (b > 255) b = 255;\r\n    else if (b < 0) b = 0;\r\n    var g = (num & 0x0000ff) + amt;\r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const pieGraphColorArray = [\r\n    \"#fffa65\",\r\n    \"#ffaf40\",\r\n    \"#ffb8b8\",\r\n    \"#cd84f1\",\r\n    \"#32ff7e\",\r\n    \"#7efff5\",\r\n    \"#18dcff\",\r\n    \"#7d5fff\",\r\n    \"#4b7bec\",\r\n    \"#d1d8e0\",\r\n    \"#2bcbba\",\r\n    \"#F8EFBA\",\r\n    \"#B33771\",\r\n    \"#D6A2E8\",\r\n  ];\r\n\r\n  const pieGraphHoverColorArray = [\r\n    LightenDarkenColor(\"#fffa65\", -30),\r\n    LightenDarkenColor(\"#ffaf40\", -30),\r\n    LightenDarkenColor(\"#ffb8b8\", -30),\r\n    LightenDarkenColor(\"#cd84f1\", -30),\r\n    LightenDarkenColor(\"#32ff7e\", -30),\r\n    LightenDarkenColor(\"#7efff5\", -30),\r\n    LightenDarkenColor(\"#18dcff\", -30),\r\n    LightenDarkenColor(\"#7d5fff\", -30),\r\n    LightenDarkenColor(\"#4b7bec\", -30),\r\n    LightenDarkenColor(\"#d1d8e0\", -30),\r\n    LightenDarkenColor(\"#2bcbba\", -30),\r\n    LightenDarkenColor(\"#F8EFBA\", -30),\r\n    LightenDarkenColor(\"#B33771\", -30),\r\n    LightenDarkenColor(\"#D6A2E8\", -30),\r\n  ];\r\n\r\n  const pieState = {\r\n    labels: label,\r\n    datasets: [\r\n      {\r\n        label: \"Sub-part\",\r\n        backgroundColor: pieGraphColorArray,\r\n        hoverBackgroundColor: pieGraphHoverColorArray,\r\n        data: pieData,\r\n      },\r\n    ],\r\n    height: 410,\r\n    width: 500,\r\n  };\r\n\r\n  const lineState = {\r\n    labels: label,\r\n    datasets: [\r\n      {\r\n        label: \"Progress in each\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        borderWidth: 2,\r\n        data: lineData,\r\n      },\r\n    ],\r\n    height: 450,\r\n    width: 500,\r\n  };\r\n\r\n\r\n  function sortObj(obj) {\r\n    return Object.keys(obj).sort().reduce(function (result, key) {\r\n      result[key] = obj[key];\r\n      return result;\r\n    }, {});\r\n  }\r\n\r\n  const listItems = (CombineNameValueOfParts,CombineNameProgressOfParts,CompanyId,projectid) => {\r\n    var d;\r\n    var content = [];\r\n    for(d in CombineNameValueOfParts){\r\n      content.push(  \r\n      <div>\r\n        <ListParts\r\n          label={d}\r\n          value={CombineNameValueOfParts[d]}\r\n          CompanyId={CompanyId}\r\n          projectid={projectid}\r\n          progress={CombineNameProgressOfParts[d]}\r\n        />\r\n      </div>\r\n    );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {graph1Loading === true ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"project-graph-area\">\r\n            <div>\r\n              <div>\r\n                <center>\r\n                  <h3>Parts Percentage</h3>\r\n                </center>\r\n              </div>\r\n              <Pie\r\n                data={pieState}\r\n                className=\"project-graph-Pie\"\r\n                options={{\r\n                  options: {\r\n                    title: {\r\n                      display: true,\r\n                      text: \"Parts Percentage\",\r\n                      fontSize: 20,\r\n                    },\r\n                  },\r\n\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"right\",\r\n                  },\r\n                  responsive: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <center>\r\n                  <h3>Progress Report</h3>\r\n                </center>\r\n              </div>\r\n              <Line\r\n                data={lineState}\r\n                className=\"project-graph-Line\"\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Progress Report \",\r\n                    fontSize: 20,\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"right\",\r\n                  },\r\n                  responsive: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"project-part-list\">\r\n        <center>\r\n          <div className=\"project-part-head\">\r\n            <h2>Major Parts {\" & \"} Percentage</h2>\r\n          </div>\r\n        </center>\r\n        <div className=\"project-major-part-container\">{listItems(sortObj(props.state.CombineNameValueOfParts),props.state.CombineNameProgressOfParts,props.CompanyId,props.projectid)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListParts(props) {\r\n  const [state, setState] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [status, setStatus] = useState(\"NotStarted\");\r\n  const [percentageCompleted, setPercentageCompleted] = useState(0);\r\n  const [oldPercentageCompleted, setOldPercentageCompleted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (percentageCompleted === 100) {\r\n      setStatus(\"Completed\");\r\n    }\r\n\r\n    setPercentageCompleted(props.progress);\r\n    setOldPercentageCompleted(props.progress);\r\n    setState([props.label,props.value]);\r\n    setLoading(false);\r\n  }, [props.value]);\r\n\r\n\r\n\r\n\r\n\r\n  const handleStatusChange = async (e) => {\r\n    e.preventDefault();\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handlePercentageChange = async (e) => {\r\n    e.preventDefault();\r\n    if (parseFloat(e.target.value) > 100) {\r\n      alert(\"percentage cant be more than 100%\");\r\n    } else {\r\n      setOldPercentageCompleted(percentageCompleted);\r\n      setPercentageCompleted(e.target.value);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const submitPercentageChange = async (e) => {\r\n    e.preventDefault();\r\n\r\n    firestore\r\n      .collection(\"companies\")\r\n      .doc(props.CompanyId)\r\n      .collection(\"Projects\")\r\n      .doc(props.projectid)\r\n      .update({\r\n        [\"CombineNameProgressOfParts.\"+state[0]]: parseInt(percentageCompleted),\r\n      })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <div>loading....</div>\r\n      ) : (\r\n        <div className=\"project-major-parts-child\">\r\n          <div className=\"project-major-parts-child-head\">\r\n            <div className=\"major-part-name\">{state[0]}</div>\r\n            <div className=\"major-part-value\">\r\n              <form onSubmit={submitPercentageChange}>\r\n                <label style={{ fontSize: 12, alignSelf: \"center\" }}>\r\n                  {\"%\"} completed {\" : \"}\r\n                </label>\r\n                <input\r\n                  className=\"major-part-value-input\"\r\n                  type=\"number\"\r\n                  value={percentageCompleted}\r\n                  onChange={handlePercentageChange}\r\n                />\r\n                <button className=\"major-part-button\" type=\"submit\">change</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"major-part-status\">\r\n              <select\r\n                className=\"major-part-status-select\"\r\n                value={status}\r\n                onChange={handleStatusChange}\r\n              >\r\n                <option value=\"InProgress\">InProgress</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Hault\">Hault</option>\r\n                <option value=\"NotStarted\">NotStarted</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"project-sub-part\">\r\n            <SubParts\r\n              CompanyId={props.CompanyId}\r\n              projectid={props.projectid}\r\n              partname={state[0]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\Chat.js",["147","148","149","150","151","152"],"import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { auth, firestore } from \"../../initfirebase\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport \"../../css/chat.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactShadowScroll from \"react-shadow-scroll\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Chat(props) {\r\n  let history = useHistory();\r\n\r\n  const [list, setList] = useState([{}]);\r\n  const [firstloading, setfirstLoading] = useState(true);\r\n  const [secondLoading, setsecondLoading] = useState(false);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [selectedList, setSelectedList] = useState({});\r\n  const [CompanyId, setCompanyId] = useState(\"\");\r\n  const [ProfileState, setProfileState] = useState({});\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    if (firstloading) {\r\n      firestore\r\n        .collection(\"Employees\")\r\n        .doc(user.email)\r\n        .collection(\"info\")\r\n        .doc(\"info\")\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            var userCompanyId = doc.data().CompanyId;\r\n            setCompanyId(userCompanyId);\r\n            setSelectedId(userCompanyId);\r\n            setProfileState(doc.data());\r\n          } else {\r\n            console.log(\"No such document!\");\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n          alert(error + \"in getting companyId in first search\");\r\n        });\r\n\r\n      if (CompanyId != \"\") {\r\n        firestore\r\n          .collection(\"companies\")\r\n          .doc(CompanyId)\r\n          .collection(\"Messages\")\r\n          .where(\"EmployeeEmails\", \"array-contains\", user.email)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const Lists = [];\r\n            querySnapshot.forEach((documentSnapshot) => {\r\n              Lists.push({ ...documentSnapshot.data() });\r\n              if (documentSnapshot.data().groupId === CompanyId) {\r\n                setSelectedList(documentSnapshot.data());\r\n              }\r\n            });\r\n            setList(Lists);\r\n            setsecondLoading(false);\r\n            setfirstLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error removing document: \", error);\r\n            alert(error + \"in putting CompanyId in second search\");\r\n          });\r\n      }\r\n    }\r\n  },[props,selectedId]);\r\n\r\n  const changeSelectedGroup = (props) => {\r\n    setSelectedId(props);\r\n    for (var d in list) {\r\n      console.log(list[d].groupId);\r\n      if (list[d].groupId === props) {\r\n        setSelectedList(list[d]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"parent-body\">\r\n      <LeftSidebar history={history} />\r\n      {secondLoading === true ? (\r\n        <div className=\"loading\">\r\n          <div style={{ fontSize: 50 }}>loading </div>\r\n          <ReactLoading\r\n            type=\"bubbles\"\r\n            color=\"#2d3436\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"body-for-chat\">\r\n          <ChatGroupList\r\n            CompanyId={CompanyId}\r\n            selectedId={selectedId}\r\n            list={list}\r\n            changeSelectedGroup={changeSelectedGroup}\r\n          />\r\n          <BeforeMessagingArea\r\n            CompanyId={CompanyId}\r\n            selectedId={selectedId}\r\n            selectedList={selectedList}\r\n            ProfileState={ProfileState}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//////////////////////////////////// group-list ///////////////////////////////////\r\n\r\nfunction ChatGroupList(props) {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const listItems = props.list.map((d, idx) => (\r\n    <ListChild\r\n      changeSelectedGroup={props.changeSelectedGroup}\r\n      selectedId={props.selectedId}\r\n      d={d}\r\n      key={idx}\r\n    />\r\n  ));\r\n\r\n  // var listItems = \"yo\";\r\n\r\n  return (\r\n    <div className=\"group-list\">\r\n      <div className=\"group-list-head\">\r\n        <div className=\"group-name-head\">Group Names</div>\r\n      </div>\r\n      <div>\r\n        <ReactShadowScroll style={{ height: 300, padding: 5 }} autoHide>\r\n          {listItems}\r\n        </ReactShadowScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListChild(props) {\r\n  const [selected, setSelected] = useState(false);\r\n  var selectedStyle = selected ? \"isSelectedGroup\" : \"notSelectedGroup\";\r\n  useEffect(() => {\r\n    if (props.selectedId === props.d.groupId) {\r\n      setSelected(true);\r\n    } else {\r\n      setSelected(false);\r\n    }\r\n  },[props]);\r\n\r\n  return (\r\n    <div className={selectedStyle}>\r\n      <div\r\n        className=\"inside-box\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          props.changeSelectedGroup(props.d.groupId);\r\n        }}\r\n      >\r\n        {props.d.groupName}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass BeforeMessagingArea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedId: \"\",\r\n      selectedList: [],\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      selectedId: this.props.selectedId,\r\n      selectedList: this.props.selectedList,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props.selectedId !== prevProps.selectedId) {\r\n      this.forceUpdate();\r\n      this.setState({\r\n        selectedId: this.props.selectedId,\r\n        selectedList: this.props.selectedList,\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading === true ? (\r\n          <ReactLoading\r\n            type=\"spinningBubbles\"\r\n            color=\"#2d3436\"\r\n            height={200}\r\n            width={200}\r\n          />\r\n        ) : (\r\n          <MessagingArea\r\n            CompanyId={this.props.CompanyId}\r\n            selectedId={this.state.selectedId}\r\n            selectedList={this.state.selectedList}\r\n            ProfileState={this.props.ProfileState}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/////////////////////////////////// for wrapping conditionally rendered hoook /////////////////////////////////\r\nconst ConditionUseCollectionData = ({\r\n  setMessageList,\r\n  CompanyId,\r\n  selectedId,\r\n}) => {\r\n  const messageRef = firestore\r\n    .collection(\"companies\")\r\n    .doc(CompanyId)\r\n    .collection(\"Messages\")\r\n    .doc(selectedId)\r\n    .collection(\"message-list\");\r\n  const querry = messageRef.orderBy(\"createdAt\").limit(50);\r\n\r\n  const [messageList] = useCollectionData(querry, { idField: \"id\" });\r\n  setMessageList(messageList);\r\n\r\n  return null;\r\n};\r\n\r\n/////////////////////////////////// messaging area ///////////////////////////////\r\n\r\nfunction MessagingArea(props) {\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [formValue, setFormValue] = useState(\"\");\r\n  const { name, email } = props.ProfileState;\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom\r\n    ,[messageList]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    var user = auth.currentUser;\r\n    var userName = user.displayName;\r\n    var uid = user.email;\r\n    if(userName){\r\n      await firestore\r\n      .collection(\"companies\")\r\n      .doc(props.CompanyId)\r\n      .collection(\"Messages\")\r\n      .doc(props.selectedId)\r\n      .collection(\"message-list\")\r\n      .add({\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        userName,\r\n        uid,\r\n      });\r\n    }\r\n    else {\r\n      alert(\"not able to get name from authentication service check your internet connection or trying reloading your browser\")\r\n    }\r\n    setFormValue(\"\");\r\n    scrollToBottom();\r\n  };\r\n\r\n  return (\r\n    <div className=\"messaging-area-body\">\r\n      <div className=\"message-chat-window\">\r\n      {props.CompanyId && props.selectedId && (\r\n          <ConditionUseCollectionData\r\n            CompanyId={props.CompanyId}\r\n            selectedId={props.selectedId}\r\n            setMessageList={setMessageList}\r\n          />\r\n        )}\r\n        <div className=\"message-chat-window-header\">\r\n          Group Name {\"-> \"}{props.selectedList.groupName}\r\n        </div>\r\n        <div className=\"message-chat-window-body\">\r\n          <ReactShadowScroll\r\n            style={{ height: 525, padding: 4}}\r\n            autoHide\r\n          >\r\n            {loading === true ? (\r\n              <ReactLoading\r\n                type=\"spinningBubbles\"\r\n                color=\"#2d3436\"\r\n                height={250}\r\n                width={200}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {messageList &&\r\n                  messageList.map((d, idx) => (\r\n                    <MessageList\r\n                      key={idx}\r\n                      d={d}\r\n                      messageList={messageList}\r\n                      uid={email}\r\n                      userName={name}\r\n                    />\r\n                  ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            )}\r\n          </ReactShadowScroll>\r\n        </div>\r\n        <div className=\"message-chat-window-footer\">\r\n          <form onSubmit={sendMessage}>\r\n            <input\r\n              className=\"text-input\"\r\n              type=\"text\"\r\n              name=\"text\"\r\n              value={formValue}\r\n              onChange={(e) => setFormValue(e.target.value)}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n              send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/////////////////////////////////   Message List   ////////////////////////////////////////////////////////\r\n\r\nfunction MessageList(props) {\r\n  const [sender, setSender] = useState(false);\r\n\r\n  var selectedStyle = sender ? \"message-sent\" : \"message-recived\";\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    if (props.d.uid === props.uid || props.d.uid === user.email) {\r\n      setSender(true);\r\n    }\r\n  }, [props]);\r\n  return (\r\n    <div className={selectedStyle}>\r\n      <div>\r\n        <div className=\"message-child\">{props.d.text}</div>\r\n        <div className=\"uid-style\">{props.d.userName}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\blog\\RankingSystem.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\AuthorityArea.js",["153","154","155","156","157","158"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport \"../../css/authority-area.css\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { auth, firestore } from \"../../initfirebase\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nfunction AuthorityArea(props) {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  const [ProfileState , setProfileState] = useState(props.location.state.ProfileState);\r\n  const [CompanyState , setCompanyState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [userRank, setUserRank] = useState(props.location.state.ProfileState.rank);\r\n\r\n  function RenderRedirect(event) {\r\n    event.preventDefault();\r\n    var renderto = event.target.name;\r\n    history.push({\r\n      pathname: `./authority-area/${renderto}`,\r\n      state: { ProfileState: ProfileState , CompanyState: CompanyState },\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    var user = auth.currentUser;\r\n    var i = 0;\r\n    i++;\r\n    console.log(ProfileState);\r\n    if (loading){\r\n    firestore\r\n      .collection(\"Employees\")\r\n      .doc(user.email)\r\n      .collection(\"info\")\r\n      .doc(\"info\")\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          var userCompanyId = doc.data().CompanyId;\r\n          setProfileState(doc.data());\r\n          console.log(doc.data().CompanyId);\r\n          setUserRank(doc.data().rank);\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n      if(ProfileState.CompanyId){\r\n        firestore\r\n        .collection(\"companies\")\r\n        .doc(ProfileState.CompanyId)\r\n        .collection(\"info\")\r\n        .doc(\"info\")\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            setCompanyState(doc.data());\r\n            setLoading(false);\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n          }\r\n        });\r\n      }\r\n    }\r\n      \r\n  },[ProfileState]);\r\n  \r\n  return (\r\n    <div>\r\n      {loading == true ? (\r\n        <div style ={{margin:70}}>\r\n          <ReactLoading type=\"spokes\" color=\"#2d3436\" />\r\n        </div>\r\n\r\n      ) : (\r\n        <section>\r\n          <LeftSidebar history={history} />\r\n          <section className=\"body-content-authority\">\r\n            <div className=\"heading\">\r\n              Authority Area for rank : - {userRank}\r\n            </div>\r\n            <section>\r\n              {(() => {\r\n                switch (userRank) {\r\n                  case \"1\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        {\" \"}\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add any department only after that you can use\r\n                            dashboard and can add employees to those\r\n                            departments. Using the department Id (that you\r\n                            create while creating department).\r\n                          </div>\r\n                          <button\r\n                            name=\"add-depart\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Project\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Project to the particular person through their\r\n                            department Id and their email-id. The project will\r\n                            be shown at that particular employees.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-project\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Project\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            5. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            You can change the rank of other employees using this. \r\n                            You are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            6. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add to dept.\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  case \"2\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Add Project\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Project to the particular person through their\r\n                            department Id and their email-id. The project will\r\n                            be shown at that particular employees.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-project\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Project\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                          You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            5. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  case \"3\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                          You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  case \"4\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                          You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add to department\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n\r\n                  case \"5\":\r\n                    return (\r\n                      <div className=\"admin-child\">\r\n                        <div className=\"admin-content-heading\">\r\n                          Nothing to Show\r\n                        </div>\r\n                        <div className=\"admin-content\">\r\n                          If this is being displayed that means that your rank\r\n                          is low and you are not currently authorized do any\r\n                          stuff for the company. You can work in project and\r\n                          departments that you are alloted for any other rank.\r\n                        </div>\r\n                      </div>\r\n                    );\r\n\r\n                  case \"1a\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add any department only after that you can use\r\n                            dashboard and can add employees to those\r\n                            departments. Using the department Id (that you\r\n                            create while creating department).\r\n                          </div>\r\n                          <button\r\n                            name=\"add-depart\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Project\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Project to the particular person through their\r\n                            department Id and their email-id. The project will\r\n                            be shown at that particular employees.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-project\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Project\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            5. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                          You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n                       \r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            6. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add \r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  case \"2a\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Add Project\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Project to the particular person through their\r\n                            department Id and their email-id. The project will\r\n                            be shown at that particular employees.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-project\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Project\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add to department\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  case \"3a\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n\r\n                  case \"4a\":\r\n                    return (\r\n                      <div id=\"admin\">\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            1. Add Employees\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add an employee in any deaprtment using that\r\n                            department ID after that the employee can sign-in\r\n                            using that entered e-mail and password.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add {\"+\"}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            2. Add Notice\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add Notice to Notice Section you can select to whom\r\n                            this notice may concern to or the notice might be\r\n                            directly for the whole Company.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-notice\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add Notice\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            3. Rank changing\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                          You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n                          </div>\r\n                          <button\r\n                            name=\"rank-changing\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Change\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            4. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add to department\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n\r\n                  default:\r\n                    return (\r\n                      <div className=\"admin-child\">\r\n                        <div className=\"admin-content-heading\">\r\n                          Nothing to Show\r\n                        </div>\r\n                        <div className=\"admin-content\">\r\n                          If this is being displayed that means that your rank\r\n                          is low and you are not currently authorized do any\r\n                          stuff for the company. You can work in project and\r\n                          departments that you are alloted for any other rank.\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                }\r\n              })()}\r\n\r\n              {/*                           \r\n          <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">1. Add Employees</div>\r\n              <div className=\"admin-content\">\r\n                Add an employee in any deaprtment using that department ID after\r\n                that the employee can sign-in using that entered e-mail and\r\n                password.\r\n              </div>\r\n              <button\r\n                name=\"add-employee\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Add {\"+\"}\r\n              </button>\r\n            </div>\r\n  \r\n            <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">2. Add Department</div>\r\n              <div className=\"admin-content\">\r\n                Add any department only after that you can use dashboard and can\r\n                add employees to those departments. Using the department Id (that\r\n                you create while creating department).\r\n              </div>\r\n              <button\r\n                name=\"add-depart\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n           \r\n            <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">3. Add Notice</div>\r\n              <div className=\"admin-content\">\r\n                Add Notice to Notice Section you can select to whom this notice\r\n                may concern to or the notice might be directly for the whole\r\n                Company.\r\n              </div>\r\n              <button\r\n                name=\"add-notice\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Add Notice\r\n              </button>\r\n            </div>\r\n            <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">4. Add Project</div>\r\n              <div className=\"admin-content\">\r\n                Add Project to the particular person through their department Id\r\n                and their email-id. The project will be shown at that particular\r\n                employees.\r\n              </div>\r\n              <button\r\n                name=\"add-project\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Add Project\r\n              </button>\r\n            </div>\r\n            <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">5. Rank changing</div>\r\n              <div className=\"admin-content\">\r\n               You can change the rank of other employees using this. \r\n                            you are authorized to change the rank of employee lower then you to your rank or lower.\r\n              </div>\r\n              <button\r\n                name=\"rank-changing\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Change\r\n              </button>\r\n            </div>\r\n             <div className=\"admin-child\">\r\n              <div className=\"admin-content-heading\">Monitor The Attendance</div>\r\n              <div className=\"admin-content\">\r\n                Monitor the attendance of any employee through their working hours\r\n                that they worked in the website for the day basis.\r\n              </div>\r\n              <button\r\n                name=\"attendance-monitoring\"\r\n                onClick={RenderRedirect}\r\n                className=\"admin-content-button\"\r\n              >\r\n                Monitor\r\n              </button>\r\n            </div> \r\n                                    <div className=\"admin-child\">\r\n                          <div className=\"admin-content-heading\">\r\n                            6. Add Employee To Department\r\n                          </div>\r\n                          <div className=\"admin-content\">\r\n                            Add An Employee to any Department they belong. Make\r\n                            sure that Department and employee both are created\r\n                            before hand.\r\n                          </div>\r\n                          <button\r\n                            name=\"add-employee-to-department\"\r\n                            onClick={RenderRedirect}\r\n                            className=\"admin-content-button\"\r\n                          >\r\n                            Add \r\n                          </button>\r\n                        </div> */}\r\n            </section>\r\n          </section>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorityArea;\r\n","C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\RankChanging.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\admin-add\\AddEmployeeToDept.js",[],"C:\\Users\\negia\\Desktop\\react bootcamp\\vdt-business-incubator-\\src\\component\\Work\\ProjectManage\\SubParts.js",["159","160","161","162","163","164","165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth, firestore, storage } from \"../../../initfirebase\";\r\nimport \"../../../css/project-work.css\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport ReactShadowScroll from \"react-shadow-scroll\";\r\n\r\n////////////////// to automatically re-render firestore for collection\r\n\r\nconst ConditionUseCollectionDataForParts = ({\r\n  setPartsInfo,\r\n  CompanyId,\r\n  projectid,\r\n  partname,\r\n}) => {\r\n  const subPartsRef = firestore\r\n    .collection(\"companies\")\r\n    .doc(CompanyId)\r\n    .collection(\"Projects\")\r\n    .doc(projectid)\r\n    .collection(partname);\r\n  const querry = subPartsRef.orderBy(\"stepNo\");\r\n\r\n  const [partsInfo] = useCollectionData(querry, { idField: \"id\" });\r\n  setPartsInfo(partsInfo);\r\n\r\n  return null;\r\n};\r\n\r\n/////////////////////// to create and manage subparts category\r\n\r\nexport default function SubParts(props) {\r\n  const [partsInfo, setPartsInfo] = useState([]);\r\n  const [stepNo, setStepNo] = useState(1);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [done, setDone] = useState(false);\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [finishTill, setFinishTill] = useState(date);\r\n\r\n  const addSubPart = async (e) => {\r\n    e.preventDefault();\r\n    var user = auth.currentUser;\r\n    var userName = user.displayName;\r\n    var uid = user.email;\r\n    if (userName) {\r\n      await firestore\r\n        .collection(\"companies\")\r\n        .doc(props.CompanyId)\r\n        .collection(\"Projects\")\r\n        .doc(props.projectid)\r\n        .collection(props.partname)\r\n        .doc(`${description}-${finishTill}`)\r\n        .set({\r\n          description: description,\r\n          stepNo: stepNo,\r\n          done: false,\r\n          finishTill: finishTill,\r\n          userName,\r\n          uid,\r\n        });\r\n    } else {\r\n      alert(\r\n        \"not able to get name from authentication service check your internet connection or trying reloading your browser\"\r\n      );\r\n    }\r\n\r\n    var curr = new Date();\r\n    curr.setDate(curr.getDate() + 3);\r\n    var date = curr.toISOString().substr(0, 10);\r\n\r\n    setDescription(\"\");\r\n    setStepNo(1);\r\n    setFinishTill(date);\r\n    setDone(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const subPartsRef = firestore\r\n      .collection(\"companies\")\r\n      .doc(props.CompanyId)\r\n      .collection(\"Projects\")\r\n      .doc(props.projectid)\r\n      .collection(props.partname);\r\n    const querry = subPartsRef.orderBy(\"stepNo\");\r\n\r\n    const partsInfo = [];\r\n    querry\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          partsInfo.push(doc.data());\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n    setPartsInfo(partsInfo);\r\n  }, [props]);\r\n\r\n  const listSubPart = (partsInfo) => {\r\n    const content = [];\r\n    var d, x;\r\n    for (d in partsInfo) {\r\n      content.push(\r\n        <ListChild\r\n          partsInfo={partsInfo[d]}\r\n          partname={props.partname}\r\n          CompanyId={props.CompanyId}\r\n          projectid={props.projectid}\r\n          d={d}\r\n        />\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConditionUseCollectionDataForParts\r\n        CompanyId={props.CompanyId}\r\n        projectid={props.projectid}\r\n        partname={props.partname}\r\n        setPartsInfo={setPartsInfo}\r\n      />\r\n      <div className=\"sub-part\">\r\n        <div className={`add-sub-part`}>\r\n          <form onSubmit={addSubPart}>\r\n            <div className=\"sub-part-input\">\r\n              <div className=\"sub-part-input-child\">\r\n                <label>SNo.{\" : \"}</label>\r\n                <input\r\n                  className=\"sub-part-number-input\"\r\n                  type=\"number\"\r\n                  name=\"stepNo\"\r\n                  value={stepNo}\r\n                  onChange={(e) => setStepNo(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"sub-part-input-child\">\r\n                <label>Desc{\" : \"}</label>\r\n                <input\r\n                  className=\"sub-part-text-input\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sub-part-input\">\r\n              <div className=\"sub-part-input-child\">\r\n                <label>Finish Till{\" : \"}</label>\r\n                <input\r\n                  className=\"sub-part-text-input\"\r\n                  type=\"date\"\r\n                  name=\"finishTill\"\r\n                  placeholder=\"finish Till\"\r\n                  value={finishTill}\r\n                  onChange={(e) => setFinishTill(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"sub-part-input-child\">\r\n                <button className=\"sub-parts-form-button\" type=\"submit\">\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"sub-parts-input\">\r\n              <label>Add any file (not necessary) {\" : \"}</label>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n              />\r\n            </div> */}\r\n            {/* <div className=\"file-name\">{file.name ? file.name : \"\"}</div> */}\r\n          </form>\r\n        </div>\r\n        <div className=\"sub-part-list-area\">\r\n          <ReactShadowScroll style={{ height: 300, padding: 2 }} autoHide>\r\n            {/* <div className=\"sub-parts-head\">\r\n          <div className=\"sub-parts-head-stepNo\">Step No.</div>\r\n          <div className=\"sub-parts-head-desc\">Description</div>\r\n          <div className=\"sub-parts-head-finishTill\">Finish Till</div>\r\n          <div className=\"sub-parts-head-file\">File</div>\r\n        </div> */}\r\n            {listSubPart(partsInfo)}\r\n          </ReactShadowScroll>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListChild(props) {\r\n  const [completed, setCompleted] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  // const [fileDownloadLoading, setFileDownloadLoading] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleSubPartCompletedCheckbox = (props) => {\r\n    setCompleted(!completed);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    setCompleted(props.partsInfo.done);\r\n\r\n    // if (props.partsInfo.filePath) {\r\n    //   storage.ref(`/sub-parts/${props.partname}`).child(`${props.partsInfo.stepNo}-${props.partsInfo.description}-${props.partsInfo.finishTill}/${props.partsInfo.fileName}`).getDownloadURL()\r\n    //   .then((url) => {\r\n    //     setFileUrl(url);\r\n\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     // Handle any errors\r\n    //     alert(\"Error In Getting file from storage : \" + error);\r\n    //   });\r\n\r\n      \r\n    // }\r\n\r\n\r\n  }, [props]);\r\n\r\n  var user = auth.currentUser;\r\n  var uid = user.email;\r\n\r\n  const SubmitFile = async (e) => {\r\n    e.preventDefault();\r\n    var file = e.target.files[0];\r\n    if (uid) {\r\n      await firestore\r\n        .collection(\"companies\")\r\n        .doc(props.CompanyId)\r\n        .collection(\"Projects\")\r\n        .doc(props.projectid)\r\n        .collection(props.partname)\r\n        .doc(`${props.partsInfo.description}-${props.partsInfo.finishTill}`)\r\n        .update({\r\n          fileName: file.name ? file.name : \"no file\",\r\n          filePath: file.name\r\n            ? `/sub-parts/${props.partname}/${props.partsInfo.stepNo}-${props.partsInfo.description}-${props.partsInfo.finishTill}/${file.name}`\r\n            : \"\",\r\n        }).then(() =>{\r\n          storage\r\n          .ref(\r\n            `/sub-parts/${props.partname}/${props.partsInfo.stepNo}-${props.partsInfo.description}-${props.partsInfo.finishTill}/${file.name}`\r\n          )\r\n          .put(file)\r\n          .on(\"state_changed\", alert(\"success\"), alert);\r\n        } );\r\n\r\n    } else {\r\n      alert(\r\n        \"not able to get name from authentication service check your internet connection or trying reloading your browser\"\r\n      );\r\n    }\r\n\r\n    setFile(null);\r\n  };\r\n\r\n  const DownloadFile = async (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    const url = await storage.ref(`/sub-parts/${props.partname}`).child(`${props.partsInfo.stepNo}-${props.partsInfo.description}-${props.partsInfo.finishTill}/${props.partsInfo.fileName}`).getDownloadURL();\r\n            var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'blob';\r\n        xhr.onload = (event) => {\r\n          var blob = xhr.response;\r\n        };\r\n        xhr.open('GET', url);\r\n        xhr.send();\r\n\r\n    console.log(\"inside download file function and url is : \"+ url );\r\n    // storage.ref(`/sub-parts/${props.partname}`).child(`${props.partsInfo.stepNo}-${props.partsInfo.description}-${props.partsInfo.finishTill}/${props.partsInfo.fileName}`).getDownloadURL()\r\n    //   .then((url) => {\r\n    //     // `url` is the download URL for 'images/stars.jpg'\r\n\r\n    //     // This can be downloaded directly:\r\n    //     var xhr = new XMLHttpRequest();\r\n    //     xhr.responseType = 'blob';\r\n    //     xhr.onload = (event) => {\r\n    //       var blob = xhr.response;\r\n    //     };\r\n    //     xhr.open('GET', url);\r\n    //     xhr.send();\r\n\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     // Handle any errors\r\n    //     alert(\"Error In Getting file from storage : \" + error);\r\n    //   });\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sub-part-list-child\">\r\n        <div className=\"sub-part-list-child-content-step\">\r\n          {props.partsInfo.stepNo}\r\n        </div>\r\n        <div className=\"sub-part-list-child-content-date\">\r\n          {props.partsInfo.finishTill.slice(5)}\r\n        </div>\r\n        <div className=\"sub-part-list-child-content-desc\">\r\n          {props.partsInfo.description}\r\n        </div>\r\n        <div className=\"sub-part-list-child-content-checkbox\">\r\n          <form>\r\n            <input\r\n              name={`completed`}\r\n              type=\"checkbox\"\r\n              checked={completed}\r\n              onChange={handleSubPartCompletedCheckbox}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"sub-part-list-child-content-file-upload\">\r\n          <form>\r\n            <label className=\"sub-part-upload-file-label\" for=\"sub-file\">\r\n              <div className=\"file-upload-logo\">\r\n                <div className=\"file-upload-content\">upload</div>\r\n              </div>\r\n            </label>\r\n            <input id=\"sub-file\" type=\"file\" onChange={SubmitFile} />\r\n          </form>\r\n        </div>\r\n        <div className=\"sub-part-list-child-content-file-upload\">\r\n          {props.partsInfo.fileName ? (\r\n            <div className=\"file-download-logo\" onClick ={DownloadFile}>\r\n              <div className=\"file-upload-logo\">\r\n                <div className=\"file-upload-content\">down</div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":165,"column":7,"nodeType":"173","messageId":"174","endLine":165,"endColumn":8},{"ruleId":"171","severity":1,"message":"175","line":375,"column":7,"nodeType":"173","messageId":"174","endLine":375,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":380,"column":3,"nodeType":"173","endLine":380,"endColumn":12,"suggestions":"178"},{"ruleId":"167","replacedBy":"179"},{"ruleId":"169","replacedBy":"180"},{"ruleId":"171","severity":1,"message":"181","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"182","line":69,"column":11,"nodeType":"173","messageId":"174","endLine":69,"endColumn":20},{"ruleId":"171","severity":1,"message":"183","line":13,"column":9,"nodeType":"173","messageId":"174","endLine":13,"endColumn":11},{"ruleId":"171","severity":1,"message":"175","line":184,"column":7,"nodeType":"173","messageId":"174","endLine":184,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":69,"column":5,"nodeType":"186","messageId":"187","endLine":124,"endColumn":16,"fix":"188"},{"ruleId":"171","severity":1,"message":"181","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":124,"column":29,"nodeType":"191","messageId":"192","endLine":124,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":77,"column":13,"nodeType":"173","messageId":"195","endLine":77,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":114,"column":7,"nodeType":"173","messageId":"174","endLine":114,"endColumn":8},{"ruleId":"176","severity":1,"message":"177","line":152,"column":3,"nodeType":"173","endLine":152,"endColumn":12,"suggestions":"196"},{"ruleId":"171","severity":1,"message":"197","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":53,"column":15,"nodeType":"200","messageId":"201","endLine":53,"endColumn":22},{"ruleId":"176","severity":1,"message":"202","line":60,"column":6,"nodeType":"203","endLine":60,"endColumn":24,"suggestions":"204"},{"ruleId":"189","severity":1,"message":"190","line":171,"column":16,"nodeType":"191","messageId":"192","endLine":171,"endColumn":18},{"ruleId":"171","severity":1,"message":"205","line":361,"column":10,"nodeType":"173","messageId":"174","endLine":361,"endColumn":32},{"ruleId":"176","severity":1,"message":"206","line":372,"column":6,"nodeType":"203","endLine":372,"endColumn":19,"suggestions":"207"},{"ruleId":"171","severity":1,"message":"208","line":5,"column":22,"nodeType":"173","messageId":"174","endLine":5,"endColumn":31},{"ruleId":"189","severity":1,"message":"209","line":46,"column":21,"nodeType":"191","messageId":"192","endLine":46,"endColumn":23},{"ruleId":"176","severity":1,"message":"210","line":71,"column":5,"nodeType":"203","endLine":71,"endColumn":23,"suggestions":"211"},{"ruleId":"171","severity":1,"message":"212","line":120,"column":10,"nodeType":"173","messageId":"174","endLine":120,"endColumn":17},{"ruleId":"171","severity":1,"message":"213","line":120,"column":19,"nodeType":"173","messageId":"174","endLine":120,"endColumn":29},{"ruleId":"171","severity":1,"message":"213","line":250,"column":19,"nodeType":"173","messageId":"174","endLine":250,"endColumn":29},{"ruleId":"171","severity":1,"message":"214","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"183","line":10,"column":9,"nodeType":"173","messageId":"174","endLine":10,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":28,"column":5,"nodeType":"173","messageId":"174","endLine":28,"endColumn":6},{"ruleId":"171","severity":1,"message":"215","line":39,"column":15,"nodeType":"173","messageId":"174","endLine":39,"endColumn":28},{"ruleId":"176","severity":1,"message":"216","line":69,"column":5,"nodeType":"203","endLine":69,"endColumn":19,"suggestions":"217"},{"ruleId":"189","severity":1,"message":"190","line":73,"column":16,"nodeType":"191","messageId":"192","endLine":73,"endColumn":18},{"ruleId":"171","severity":1,"message":"218","line":36,"column":10,"nodeType":"173","messageId":"174","endLine":36,"endColumn":14},{"ruleId":"171","severity":1,"message":"219","line":36,"column":16,"nodeType":"173","messageId":"174","endLine":36,"endColumn":23},{"ruleId":"171","severity":1,"message":"220","line":37,"column":10,"nodeType":"173","messageId":"174","endLine":37,"endColumn":14},{"ruleId":"171","severity":1,"message":"221","line":106,"column":12,"nodeType":"173","messageId":"174","endLine":106,"endColumn":13},{"ruleId":"171","severity":1,"message":"222","line":203,"column":10,"nodeType":"173","messageId":"174","endLine":203,"endColumn":17},{"ruleId":"171","severity":1,"message":"223","line":203,"column":19,"nodeType":"173","messageId":"174","endLine":203,"endColumn":29},{"ruleId":"171","severity":1,"message":"218","line":205,"column":10,"nodeType":"173","messageId":"174","endLine":205,"endColumn":14},{"ruleId":"171","severity":1,"message":"224","line":278,"column":15,"nodeType":"173","messageId":"174","endLine":278,"endColumn":19},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.value] as a second argument to the useEffect Hook.",["227"],["225"],["226"],"'auth' is defined but never used.","'timestamp' is assigned a value but never used.","'id' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"228","text":"229"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared",["230"],"'firebase' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'projectid'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'oldPercentageCompleted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'percentageCompleted', 'props.label', and 'props.progress'. Either include them or remove the dependency array. If 'setPercentageCompleted' needs the current value of 'props.progress', you can also switch to useReducer instead of useState and read 'props.progress' in the reducer.",["232"],"'useParams' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'CompanyId' and 'firstloading'. Either include them or remove the dependency array.",["233"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Component' is defined but never used.","'userCompanyId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["234"],"'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'done' is assigned a value but never used.","'x' is defined but never used.","'fileUrl' is assigned a value but never used.","'setFileUrl' is assigned a value but never used.","'blob' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},[3617,3619],".",{"desc":"235","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Add dependencies array: [props.value]",{"range":"246","text":"247"},{"range":"248","text":"247"},"Update the dependencies array to be: [props, CompanyId, projectid]",{"range":"249","text":"250"},"Update the dependencies array to be: [percentageCompleted, props.label, props.progress, props.value]",{"range":"251","text":"252"},"Update the dependencies array to be: [CompanyId, firstloading, props, selectedId]",{"range":"253","text":"254"},"Update the dependencies array to be: [ProfileState, loading]",{"range":"255","text":"256"},[11568,11568],", [props.value]",[4238,4238],[1858,1876],"[props, CompanyId, projectid]",[10458,10471],"[percentageCompleted, props.label, props.progress, props.value]",[2544,2562],"[CompanyId, firstloading, props, selectedId]",[2137,2151],"[ProfileState, loading]"]